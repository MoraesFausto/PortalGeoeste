version: '3.8'

services:
  postgres_pg:
    image: postgis/postgis
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
    ports:
      - '5432:5432'
    networks:
      - portal-geoeste-network
    volumes:
      - ./postgres_pg:/var/lib/postgresql/data
      - ./geodatabase.sql:/docker-entrypoint-initdb.d/geodatabase.sql
  redis_pg:
    image: redis:alpine
    ports:
      - '6379:6379'
    networks:
      - portal-geoeste-network
    volumes:
      - ./data/redis:/data

  api-portal-geoeste:
    container_name: api-portal-geoeste
    restart: unless-stopped
    image: api-portal-geoeste-prod
    build:
      context: api
      dockerfile: Dockerfile
    environment:
      - REDIS_URL=${REDIS_URL}
      - SECRET_KEY=${SECRET_KEY}
      - SQLALCHEMY_DATABASE_URI=postgresql://${DB_USERNAME}:${DB_PASSWORD}@postgres_pg:5432/${DB_DATABASE}
    ports:
      - '5000:5000'
    networks:
      - portal-geoeste-network
    depends_on:
      - postgres_pg
      - redis_pg
    
  client-portal-geoeste:
    container_name: client-portal-geoeste
    restart: unless-stopped
    image: client-portal-geoeste-prod
    build:
      context: client
      dockerfile: Dockerfile
    ports:
      - '3000:80'
    networks:
      - portal-geoeste-network
    depends_on:
      - api-portal-geoeste

networks:
  portal-geoeste-network:
